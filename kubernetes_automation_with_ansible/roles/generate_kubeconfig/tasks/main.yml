- name: Create kubeconfig directory
  ansible.builtin.file:
    path: "{{ CONF_DIR }}"
    state: directory
    mode: '0755'

- name: Generate kubeconfig file for Admin
  ansible.builtin.shell: |
    kubectl config set-cluster k8s-the-hard-way \
      --certificate-authority={{ PKI_DIR }}/ca.pem \
      --embed-certs=true \
      --server=https://{{ groups['loadbalancer'][0] }}:6443 \
      --kubeconfig={{ CONF_DIR }}/admin.kubeconfig

    kubectl config set-credentials admin \
      --client-certificate={{ PKI_DIR }}/admin.pem \
      --client-key={{ PKI_DIR }}/admin-key.pem \
      --embed-certs=true \
      --kubeconfig={{ CONF_DIR }}/admin.kubeconfig

    kubectl config set-context default \
      --cluster=k8s-the-hard-way \
      --user=admin \
      --kubeconfig={{ CONF_DIR }}/admin.kubeconfig

    kubectl config use-context default --kubeconfig={{ CONF_DIR }}/admin.kubeconfig
  args:
    creates: "{{ CONF_DIR }}/admin.kubeconfig"

- name: Configure kubeconfig files for Kubelet
  ansible.builtin.shell: |
    kubectl config set-cluster k8s-the-hard-way \
      --certificate-authority={{ PKI_DIR }}/ca.pem \
      --embed-certs=true \
      --server=https://{{ groups['loadbalancer'][0] }}:6443 \
      --kubeconfig={{ CONF_DIR }}/{{ item }}.kubeconfig

    kubectl config set-credentials system:node:{{ item }} \
      --client-certificate={{ PKI_DIR }}/{{ item }}.pem \
      --client-key={{ PKI_DIR }}/{{ item }}-key.pem \
      --embed-certs=true \
      --kubeconfig={{ CONF_DIR }}/{{ item }}.kubeconfig

    kubectl config set-context default \
      --cluster=k8s-the-hard-way \
      --user=system:node:{{ item }} \
      --kubeconfig={{ CONF_DIR }}/{{ item }}.kubeconfig 

    kubectl config use-context default --kubeconfig={{ CONF_DIR }}/{{ item }}.kubeconfig
  args:
    creates: "{{ CONF_DIR }}/{{ item }}.kubeconfig"
  loop:
    - k8s-worker1
    - k8s-worker2
    - k8s-worker3

- name: Generate kubeconfig files for Kube-Proxy
  ansible.builtin.shell: |
    kubectl config set-cluster k8s-the-hard-way \
      --certificate-authority={{ PKI_DIR }}/ca.pem \
      --embed-certs=true \
      --server=https://{{ groups['loadbalancer'][0] }}:6443 \
      --kubeconfig={{ CONF_DIR }}/kube-proxy.kubeconfig

    kubectl config set-credentials kube-proxy \
      --client-certificate={{ PKI_DIR }}/kube-proxy.pem \
      --client-key={{ PKI_DIR }}/kube-proxy-key.pem \
      --embed-certs=true \
      --kubeconfig={{ CONF_DIR }}/kube-proxy.kubeconfig

    kubectl config set-context default \
      --cluster=k8s-the-hard-way \
      --user=kube-proxy \
      --kubeconfig={{ CONF_DIR }}/kube-proxy.kubeconfig

    kubectl config use-context default --kubeconfig={{ CONF_DIR }}/kube-proxy.kubeconfig
  args:
    creates: "{{ CONF_DIR }}/kube-proxy.kubeconfig"

- name: Generate kubeconfig files for Kube-Controller-Manager
  ansible.builtin.shell: |
    kubectl config set-cluster k8s-the-hard-way \
      --certificate-authority={{ PKI_DIR }}/ca.pem \
      --embed-certs=true \
      --server=https://{{ groups['loadbalancer'][0] }}:6443 \
      --kubeconfig={{ CONF_DIR }}/kube-controller-manager.kubeconfig

    kubectl config set-credentials system:kube-controller-manager \
      --client-certificate={{ PKI_DIR }}/kube-controller-manager.pem \
      --client-key={{ PKI_DIR }}/kube-controller-manager-key.pem \
      --embed-certs=true \
      --kubeconfig={{ CONF_DIR }}/kube-controller-manager.kubeconfig

    kubectl config set-context default \
      --cluster=k8s-the-hard-way \
      --user=system:kube-controller-manager \
      --kubeconfig={{ CONF_DIR }}/kube-controller-manager.kubeconfig

    kubectl config use-context default --kubeconfig={{ CONF_DIR }}/kube-controller-manager.kubeconfig
  args:
    creates: "{{ CONF_DIR }}/kube-controller-manager.kubeconfig"

- name: Generate kubeconfig files for Kube-Scheduler
  ansible.builtin.shell: |
    kubectl config set-cluster k8s-the-hard-way \
      --certificate-authority={{ PKI_DIR }}/ca.pem \
      --embed-certs=true \
      --server=https://{{ groups['loadbalancer'][0] }}:6443 \
      --kubeconfig={{ CONF_DIR }}/kube-scheduler.kubeconfig

    kubectl config set-credentials system:kube-scheduler \
      --client-certificate={{ PKI_DIR }}/kube-scheduler.pem \
      --client-key={{ PKI_DIR }}/kube-scheduler-key.pem \
      --embed-certs=true \
      --kubeconfig={{ CONF_DIR }}/kube-scheduler.kubeconfig

    kubectl config set-context default \
      --cluster=k8s-the-hard-way \
      --user=system:kube-scheduler \
      --kubeconfig={{ CONF_DIR }}/kube-scheduler.kubeconfig

    kubectl config use-context default --kubeconfig={{ CONF_DIR }}/kube-scheduler.kubeconfig
  args:
    creates: "{{ CONF_DIR }}/kube-scheduler.kubeconfig"
